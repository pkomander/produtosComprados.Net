@model IEnumerable<ProdutosComprados.Models.Produtos>
@using Highsoft.Web.Mvc.Charts
@using Highsoft.Web.Mvc.Charts.Rendering

@{
    ViewData["Title"] = "Index";
}

<div class="col-md-12 panel panel-default">
    <div>
        @using (Html.BeginForm("Index", "Produtos", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="container">
                <div class="col-md-6">
                    <p style="font-size: 30px">Produto:</p>
                    @Html.DropDownList("ProdutoComprado", (IEnumerable<SelectListItem>)ViewBag.Comprado, string.Empty, htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="col-md-6">
                    <br />
                    <input class="col-md-3 btn btn-dark" type="submit" value="Filtrar" />
                </div>
            </div>
        }
    </div>
    <div class="col-md-12">
        <br />
    </div>
</div>

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.NomeProduto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrecoProduto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProdutoComprado)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NomeProduto)
                </td>
                <td class="PrecoProduto">
                    @Html.DisplayFor(modelItem => item.PrecoProduto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProdutoComprado)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ListaDeProdutosId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ListaDeProdutosId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ListaDeProdutosId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <h1>Valor Total:</h1>
    <h5>R$ <b id="totalProdutos"></b></h5>
    <h3>Parcelas</h3>
    <select id="parcelas" onChange="update()">
        <option value="1">1x</option>
        <option value="2">2x</option>
        <option value="3">3x</option>
        <option value="4">4x</option>
        <option value="5">5x</option>
        <option value="6">6x</option>
        <option value="7">7x</option>
        <option value="8">8x</option>
        <option value="9">9x</option>
        <option value="10">10x</option>
        <option value="11">11x</option>
        <option value="12">12x</option>
    </select>
    <input type="text" id="value" readonly>
</div>




<div>
    @{ var chartOptions = new Highcharts
        {
            Title = new Title
            {
                Text = "Valores dos Produtos Adicionados na Lista de Compras"
            },
            Subtitle = new Subtitle
            {
                Text = "Todos os Valores dos Produtos"
            },
            XAxis = new List<XAxis>
            {
                new XAxis
                {
                    Categories = ViewData["PrecoDataString"] as List<string>
                    //Categories = new List<string>
                    //{
                        
                    //    //data = ViewData["PrecoDataString"] as List<string>
                    //    //"Produto 1",
                    //    //"Produto 2",
                    //    //"Produto 3",
                    //    //"Produto 4",
                    //    //"Produto 5",
                    //    //"Produto 6",
                    //    //"Produto 7",
                    //    //"Produto 8",
                    //    //"Produto 9",
                    //    //"Produto 10",
                    //    //"Produto 11",
                    //    //"Produto 12"
                    //}
                }
            },
            YAxis = new List<YAxis>
            {
                new YAxis
                {
                    Min = 0,
                    Title = new YAxisTitle
                    {
                        Text = "Valores R$"
                    }
                }
            },
            Tooltip = new Tooltip
            {
                Shared = true,
                UseHTML = true
            },
            PlotOptions = new PlotOptions
            {
                Column = new PlotOptionsColumn
                {
                    PointPadding = 0.2,
                    BorderWidth = 0,
                    Animation = new Animation { Enabled = false }
                }
            },
            Series = new List<Series>
            {
                new ColumnSeries
                {
                    Name = "Produtos",
                    Data = ViewData["PrecoData"] as List<ColumnSeriesData>
                },
                new LineSeries
                {
                    Name = "Valor Total",
                    Data = ViewData["TotalPreco"] as List<LineSeriesData>
                }
            }
        };
        chartOptions.ID = "chart";
        var renderer = new HighchartsRenderer(chartOptions);
    }
    @Html.Raw(renderer.RenderHtml())
</div>



<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script>

    //funcionando
    var preco = document.querySelectorAll(".PrecoProduto");
    console.log(preco);
    var auxSoma = 0;

    //A propriedade textContent da interface Node representa o
    //conteúdo de texto de um nó e dos seus descendentes.
    //Nota: textContent e HTMLElement.innerText são facilmente confundidos,
    //mas os dois possuem importantes diferenças entre sí.
    for (let i = 0; i <= preco.length; i++) {
        let valor = parseFloat(preco[i].textContent.replace(',', '.'));
        console.log('valor ' + valor);
        auxSoma += valor;
        console.log('x ' + auxSoma);
        document.getElementById('totalProdutos').innerText = auxSoma.toFixed(2).replace('.', ',');
    }

    function update() {
        var select = document.getElementById('parcelas');
        var option = select.options[select.selectedIndex];
        var totalProduto = document.getElementById('totalProdutos').innerText;

        var valorParcela = ((totalProduto.replace(',', '.')) / option.value).toFixed(2).replace('.', ',');

        var prestacao = document.getElementById('value').value = 'R$' + valorParcela;

        console.log(prestacao);
    }

    update();
</script>
